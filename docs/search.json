[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Proyecto_ViernesBioinformatica_2024",
    "section": "",
    "text": "Proyecto final\nProyecto final para el curso: viernes de bioinformática 2024-2:\n\nDatos y preguntas\n\nEl conjunto de datos utilizado fue mlb_teams del paquete openintro. Este conjunto de datos contiene información de equipos de las Grandes Ligas de Béisbol.\nPara cargar los datos utilizamos el paquete openintro.\n\n# libraries required\nlibrary(openintro) #data\nlibrary(data.table) #database manipulation\nlibrary(ggplot2) #Graphics\nlibrary(viridis) #Color palettes\nlibrary(plotly) #Interactive plots\nlibrary(stringr) # To work with strings\n\n# load data\n#?openintro::mlb_teams #information about the dataset\ndata = mlb_teams\n\n\ndim(data) #Dimension 2784   41\n\n[1] 2784   41\n\n\n\nsummary(data) #summary of variables in data\n\n      year       league_id         division_id             rank       \n Min.   :1876   Length:2784        Length:2784        Min.   : 1.000  \n 1st Qu.:1930   Class :character   Class :character   1st Qu.: 2.000  \n Median :1970   Mode  :character   Mode  :character   Median : 4.000  \n Mean   :1963                                         Mean   : 3.981  \n 3rd Qu.:1997                                         3rd Qu.: 5.000  \n Max.   :2020                                         Max.   :12.000  \n\n  games_played     home_games         wins            losses      \n Min.   : 57.0   Min.   :24.00   Min.   :  9.00   Min.   : 14.00  \n 1st Qu.:154.0   1st Qu.:77.00   1st Qu.: 67.00   1st Qu.: 67.00  \n Median :161.0   Median :81.00   Median : 78.00   Median : 77.00  \n Mean   :153.1   Mean   :78.01   Mean   : 76.19   Mean   : 76.19  \n 3rd Qu.:162.0   3rd Qu.:81.00   3rd Qu.: 88.00   3rd Qu.: 87.00  \n Max.   :165.0   Max.   :84.00   Max.   :116.00   Max.   :134.00  \n                 NA's   :228                                      \n division_winner    wild_card_winner   league_winner      world_series_winner\n Length:2784        Length:2784        Length:2784        Length:2784        \n Class :character   Class :character   Class :character   Class :character   \n Mode  :character   Mode  :character   Mode  :character   Mode  :character   \n\n\n\n\n  runs_scored        at_bats          hits         doubles     \n Min.   : 219.0   Min.   :1752   Min.   : 390   Min.   : 39.0  \n 1st Qu.: 619.0   1st Qu.:5205   1st Qu.:1316   1st Qu.:199.8  \n Median : 693.0   Median :5422   Median :1398   Median :238.0  \n Mean   : 687.6   Mean   :5228   Mean   :1367   Mean   :234.7  \n 3rd Qu.: 765.0   3rd Qu.:5527   3rd Qu.:1470   3rd Qu.:274.0  \n Max.   :1220.0   Max.   :5781   Max.   :1783   Max.   :376.0  \n\n    triples          homeruns         walks       strikeouts_by_batters\n Min.   :  3.00   Min.   :  0.0   Min.   : 18.0   Min.   :  35.0       \n 1st Qu.: 30.00   1st Qu.: 57.0   1st Qu.:435.0   1st Qu.: 532.0       \n Median : 40.00   Median :114.0   Median :499.0   Median : 800.0       \n Mean   : 45.47   Mean   :110.3   Mean   :487.4   Mean   : 781.8       \n 3rd Qu.: 57.00   3rd Qu.:156.0   3rd Qu.:558.0   3rd Qu.: 998.2       \n Max.   :150.00   Max.   :307.0   Max.   :835.0   Max.   :1595.0       \n                                                  NA's   :16           \n  stolen_bases   caught_stealing  batters_hit_by_pitch sacrifice_flies\n Min.   : 13.0   Min.   :  3.00   Min.   :  7.00       Min.   : 7.00  \n 1st Qu.: 63.0   1st Qu.: 34.00   1st Qu.: 32.00       1st Qu.:38.00  \n Median : 92.0   Median : 44.00   Median : 43.00       Median :44.00  \n Mean   :106.2   Mean   : 47.55   Mean   : 45.17       Mean   :44.23  \n 3rd Qu.:135.0   3rd Qu.: 57.00   3rd Qu.: 56.00       3rd Qu.:51.00  \n Max.   :441.0   Max.   :191.00   Max.   :160.00       Max.   :77.00  \n NA's   :76      NA's   :708      NA's   :1066         NA's   :1370   \n opponents_runs_scored earned_runs_allowed earned_run_average complete_games  \n Min.   : 209.0        Min.   :  78.0      Min.   :1.220      Min.   :  0.00  \n 1st Qu.: 615.0        1st Qu.: 518.0      1st Qu.:3.400      1st Qu.:  9.00  \n Median : 692.0        Median : 601.0      Median :3.860      Median : 39.00  \n Mean   : 687.6        Mean   : 587.7      Mean   :3.861      Mean   : 45.76  \n 3rd Qu.: 766.0        3rd Qu.: 675.0      3rd Qu.:4.332      3rd Qu.: 73.00  \n Max.   :1252.0        Max.   :1023.0      Max.   :6.710      Max.   :148.00  \n\n    shutouts          saves        outs_pitches   hits_allowed \n Min.   : 0.000   Min.   : 0.00   Min.   :1419   Min.   : 376  \n 1st Qu.: 6.000   1st Qu.:11.00   1st Qu.:4101   1st Qu.:1306  \n Median : 9.000   Median :27.00   Median :4278   Median :1399  \n Mean   : 9.857   Mean   :25.64   Mean   :4099   Mean   :1367  \n 3rd Qu.:13.000   3rd Qu.:39.00   3rd Qu.:4345   3rd Qu.:1474  \n Max.   :32.000   Max.   :68.00   Max.   :4518   Max.   :1993  \n\n homeruns_allowed walks_allowed   strikeouts_by_pitchers     errors     \n Min.   :  2.0    Min.   : 24.0   Min.   :  22.0         Min.   : 20.0  \n 1st Qu.: 64.0    1st Qu.:439.0   1st Qu.: 531.0         1st Qu.:111.0  \n Median :117.0    Median :500.0   Median : 784.0         Median :139.0  \n Mean   :110.3    Mean   :487.8   Mean   : 781.2         Mean   :168.2  \n 3rd Qu.:155.0    3rd Qu.:558.0   3rd Qu.:1001.0         3rd Qu.:189.0  \n Max.   :305.0    Max.   :827.0   Max.   :1687.0         Max.   :639.0  \n\n  double_plays   fielding_percentage  team_name          ball_park        \n Min.   : 18.0   Min.   :0.825       Length:2784        Length:2784       \n 1st Qu.:122.0   1st Qu.:0.969       Class :character   Class :character  \n Median :142.0   Median :0.977       Mode  :character   Mode  :character  \n Mean   :136.9   Mean   :0.971                                            \n 3rd Qu.:158.0   3rd Qu.:0.981                                            \n Max.   :217.0   Max.   :0.991                                            \n\n home_attendance  \n Min.   :      0  \n 1st Qu.: 534826  \n Median :1184548  \n Mean   :1375102  \n 3rd Qu.:2068023  \n Max.   :4483350  \n NA's   :108      \n\n\n\nhead(data) #first rows in data\n\n  year league_id division_id rank games_played home_games wins losses\n1 1876        NL                4           70         NA   39     31\n2 1876        NL                1           66         NA   52     14\n3 1876        NL                8           65         NA    9     56\n4 1876        NL                2           69         NA   47     21\n5 1876        NL                5           69         NA   30     36\n6 1876        NL                6           57         NA   21     35\n  division_winner wild_card_winner league_winner world_series_winner\n1                                              N                    \n2                                              Y                    \n3                                              N                    \n4                                              N                    \n5                                              N                    \n6                                              N                    \n  runs_scored at_bats hits doubles triples homeruns walks strikeouts_by_batters\n1         471    2722  723      96      24        9    58                    98\n2         624    2748  926     131      32        8    70                    45\n3         238    2372  555      51      12        4    41                   136\n4         429    2664  711      96      22        2    39                    78\n5         280    2570  641      68      14        6    24                    98\n6         260    2180  494      39      15        2    18                    35\n  stolen_bases caught_stealing batters_hit_by_pitch sacrifice_flies\n1           NA              NA                   NA              NA\n2           NA              NA                   NA              NA\n3           NA              NA                   NA              NA\n4           NA              NA                   NA              NA\n5           NA              NA                   NA              NA\n6           NA              NA                   NA              NA\n  opponents_runs_scored earned_runs_allowed earned_run_average complete_games\n1                   450                 176               2.51             49\n2                   257                 116               1.76             58\n3                   579                 238               3.62             57\n4                   261                 116               1.67             69\n5                   344                 121               1.69             67\n6                   412                 173               2.94             56\n  shutouts saves outs_pitches hits_allowed homeruns_allowed walks_allowed\n1        3     7         1896          732                7           104\n2        9     4         1777          608                6            29\n3        0     0         1773          850                9            34\n4       11     0         1872          570                2            27\n5        5     0         1929          605                3            38\n6        2     0         1590          718                8            24\n  strikeouts_by_pitchers errors double_plays fielding_percentage\n1                     77    442           42               0.860\n2                     51    282           33               0.899\n3                     60    469           45               0.841\n4                    114    337           27               0.888\n5                    125    397           44               0.875\n6                     37    473           18               0.825\n                team_name                  ball_park home_attendance\n1         Boston Red Caps        South End Grounds I              NA\n2 Chicago White Stockings        23rd Street Grounds              NA\n3         Cincinnati Reds             Avenue Grounds              NA\n4     Hartford Dark Blues Hartford Ball Club Grounds              NA\n5        Louisville Grays   Louisville Baseball Park              NA\n6        New York Mutuals   Union Grounds (Brooklyn)              NA\n\n\nPodemos ver que la base de datos cuenta con 2784 filas y 41 columnas. Con summary podemos tener una vision general de las variables, por ejmplo, podemos ver que los datos corresponden a las Grandes Ligas de Beisbol entre 1876 y 2020, así como podemos ver estadísticas básicas de las variables numéricas e identificar la clase de todas las variables. Hay algunas que contienen NA’s, por ejemplo, strikeouts_by_batters y sacrifice_flies, variables muy especificas del desempeño de los jugadores y de los equipos. Teniendo en cuenta esta revisión general, se plantean las siguientes preguntas:\n\n¿Cómo ha sido el desempeño (Rank) de los equipos de besisbol a traves de los años?\n¿Cuántos de los equipos en el top 20 de los que han jugado mas juegos, han jugado en casa y han jugado la liga NL? ¿Cuántos la liga AL? ¿Cuáles?\n¿Cuáles equipos con un nombre de mas de dos palabras tienen mas de 3000 outs_pitches y han tenido menos errores que la media por año entre 1950-2020 y a qué ligas pertenecen?\n\n\n\n\nRespuestas\nPara contestar las preguntas se utilizó el siguiente código. Para manipular los datos se empleó uno de los paquetes vistos en el curso: data.table\n\n¿Cómo ha sido el desempeño (Rank) de los equipos de besisbol a traves de los años?: En la gráfica se puede ver que el número de juegos jugados en general ha aumentado a lo largo de los años y ha disminuido su variabilidad, exceptuando algunos años en los que hubo menor cantidad de juegos y mayor varibilidad: 1918, 1919, 1972, 1981, 1994, 1995 y 2020. El número de juegos tuvo un crecimiento rápido entre 1876 y 1900, que se estabilizó después de 1900 y luego tuvo un ligero aumento a partir de 1960. En cuanto al desempeño de los equipos, se puede ver que ha tendido a mejorar, sin embargo, se puede ver que los puntos de cambio en la tendencia se ven rodeados de bajos rendimientos en los equipos.\n\n# Transform data to manipulate it\ndata_dt = as.data.table(data)\n\n# Add variable for labels in interactive plot\ndata_dt &lt;- data_dt[,tooltip_text := paste(\"Team:\", team_name, \"&lt;br&gt;Year:\", year, \"&lt;br&gt;Rank:\", rank, \"&lt;br&gt;Games Played:\", games_played)]\n\n# Create the scatter plot\np &lt;- ggplot(data_dt, aes(x = year, y = games_played, color = factor(rank), text = tooltip_text)) +\n  geom_point(alpha = 0.6) +  # alpha for transparency dots\n  scale_color_viridis_d(option = \"plasma\") +  # plasma: name of set of colors\n  labs(title = \"Juegos jugados vs año con rango de equipos\",\n       x = \"Año\",\n       y = \"Juegos jugados\",\n       color = \"Rango\")\n\n# Convert to plotly\nggplotly(p, tooltip = \"text\")\n\n\n\n\n\n¿Cuántos de los equipos en el top 20 de los que han jugado mas juegos, han jugado en casa y han jugado la liga NL? ¿Cuántos la liga AL? ¿Cuáles?\nPara esta pregunta se realizó una función que encontrara el top x de equipos dada una variable, asemás se utilizó programación defensiva para asegurar que la función corra adecuadamente y si no que retorne un mensaje indicando el error.\n\n# Function for teams in top x for a picked variable\ntop_teams = function(data, top_variable, number_top){\n  # Check variable name in character\n  stopifnot(is.character(top_variable))\n  # Ensure the variable exists in data\n  if (!(top_variable %in% colnames(data))) {\n    stop(\"Invalid variable name. Please check the variable name.\")\n  }\n  # Check variable number is numeric\n  stopifnot(is.numeric(number_top))\n  # Find top teams for top_Variable\n  top_team = setorder(data[,sum(get(top_variable)),by=c(\"team_name\")],V1)[1:number_top]\n  # Return top teams\n  return(top_team)\n}\n\n# Test the function\ntop_teams(data_dt, 20, 20) # wrong variable\n\nError in top_teams(data_dt, 20, 20): is.character(top_variable) is not TRUE\n\ntop_teams(data_dt, \"variable\", 20) # wrong variable\n\nError in top_teams(data_dt, \"variable\", 20): Invalid variable name. Please check the variable name.\n\ntop_teams(data_dt, \"games_played\", \"20\") # wrong top number\n\nError in top_teams(data_dt, \"games_played\", \"20\"): is.numeric(number_top) is not TRUE\n\n\nAhora que hemos verificado que la función esta bien, podemos utilizarla:\n\ntop_teams_gp = top_teams(data_dt, \"games_played\", 20) # top 20 teams for games_played\nteam_selected = data_dt[home_games&gt;0 & (team_name %in% top_teams_gp$team_name),.(team_name,league_id)] # select from top teams those that achive the other conditions\nteam_selected\n\n                team_name league_id\n                   &lt;char&gt;    &lt;char&gt;\n1:     Cleveland Bronchos        AL\n2:        Boston Rustlers        NL\n3: Philadelphia Blue Jays        NL\n4: Philadelphia Blue Jays        NL\n5:     Houston Colt .45's        NL\n6:     Houston Colt .45's        NL\n7:     Houston Colt .45's        NL\n8:         Seattle Pilots        AL\n\nteam_selected[,.N,by=league_id] #count number of teams per league\n\n   league_id     N\n      &lt;char&gt; &lt;int&gt;\n1:        AL     2\n2:        NL     6\n\n\nPodemos ver que hay ocho equipos del top 20 de los que han jugado más juegos que cumplen con haber jugado en casa, de estos, dos son de la liga NL (National League) y seis de la liga AL (American League).\n¿Cuáles equipos con un nombre de más de dos palabras tienen mas de 3000 outs_pitches y han tenido menos errores que la media por año entre 1950-2020 y a qué ligas pertenecen?\n\nmean_errors_year = data_dt[,.(mean_errors_year = mean(errors)),by=.(year)] # calculate mean error per year\ndata_dt_errors_year = data_dt[mean_errors_year,,on=c(\"year\")] # Join mean error variable to original data base\nhead(data_dt_errors_year[,.(errors,mean_errors_year)])\n\n   errors mean_errors_year\n    &lt;int&gt;            &lt;num&gt;\n1:    442            390.5\n2:    282            390.5\n3:    469            390.5\n4:    337            390.5\n5:    397            390.5\n6:    473            390.5\n\n# Find teams that achive the conditions\nbest_teams = data_dt_errors_year[,length_name := str_count(trimws(data_dt$team_name),\" \")][outs_pitches&gt;3000 & errors&lt;mean_errors_year & 1950&lt;year & year&lt;2020 & length_name&gt;2,.(team_name,year,league_id)]\nbest_teams\n\n                        team_name  year league_id\n                           &lt;char&gt; &lt;int&gt;    &lt;char&gt;\n 1:          Tampa Bay Devil Rays  1998        AL\n 2:          Tampa Bay Devil Rays  2003        AL\n 3: Los Angeles Angels of Anaheim  2005        AL\n 4: Los Angeles Angels of Anaheim  2008        AL\n 5: Los Angeles Angels of Anaheim  2009        AL\n 6: Los Angeles Angels of Anaheim  2011        AL\n 7: Los Angeles Angels of Anaheim  2012        AL\n 8: Los Angeles Angels of Anaheim  2014        AL\n 9: Los Angeles Angels of Anaheim  2015        AL\n10: Los Angeles Angels of Anaheim  2017        AL\n11: Los Angeles Angels of Anaheim  2018        AL\n12: Los Angeles Angels of Anaheim  2019        AL\n\n# Compare number of errors of these teams in all years\nwins_best_team = data_dt_errors_year[team_name %in% best_teams$team_name,.(team_name,errors,year,mean_errors_year)]\n\n# Plot line plot\nggplot(wins_best_team, aes(x = year, y = errors, color = factor(team_name))) +\n  geom_line(linewidth = 1) + \n  geom_line(aes(x=year,y=mean_errors_year,color=\"Media de errores\"), linewidth=1) +\n  labs(title = \"Número de errores por año de los mejores equipos\",\n       x = \"Año\",\n       y = \"Errores\",\n       color = \"Nombre\")\n\n\n\n\nSe puede ver que efectivamente los grupos tienen un número de errores menor que la media entre los años 1950 y 2020. Además, se puede ver que los equipos solo participaron al tiempo en las grandes ligas de baseball entre el 2005 y el 2007. Por otro lado, se puede ver que hay una tendencia decreciente del número de errores a lo largo de los años."
  }
]